doctype: CRE
id: 399-298
links:
- document:
    description: Verify that user-uploaded files - if required to be displayed or
      downloaded from the application - are served by either octet stream downloads,
      or from an unrelated domain, such as a cloud file storage bucket. Implement
      a suitable content security policy to reduce the risk from XSS vectors or other
      attacks from the uploaded file.
    doctype: CRE
    id: 001-005-020
    name: FILE_HANDLING_UPLOADED_FILES_SERVE_ONLY_OCTET_STREAM_OR_SEPARATE_DOMAIN
  type: SAM
- document:
    description: Verify that unstructured data is sanitized to enforce safety measures
      such as allowed characters and length.
    doctype: CRE
    id: 010-007
    name: VALIDATE_INPUT_SANITIZE_UNSTRUCTURED_DATA
  type: SAM
- document:
    description: Verify that the application sanitizes, disables, or sandboxes user-supplied
      SVG scriptable content, especially as they relate to XSS resulting from inline
      scripts, and foreignObject.
    doctype: CRE
    id: 010-034
    name: VALIDATE_INPUT_SANITIZE_ISOLATE_SCRIPTABLE_TEMPLATES_SVG
  type: SAM
- document:
    description: "Verify that output encoding is relevant for the interpreter and\
      \ context required. For example, use encoders specifically for HTML values,\
      \ HTML attributes, JavaScript, URL Parameters, HTTP headers, SMTP, and others\
      \ as the context requires, especially from untrusted inputs (e.g. names with\
      \ Unicode or apostrophes, such as \u306D\u3053 or O'Hara). (C4)"
    doctype: CRE
    id: 012-045-011
    name: CONTEXT_DEPENDENT_ENCODING
  type: SAM
- document:
    description: Verify that output encoding preserves the user's chosen character
      set and locale, such that any Unicode character point is valid and safely handled.
      (C4)
    doctype: CRE
    id: 012-045-010
    name: CONTEXT_DEPENDENT_ENCODING_CHARACTER_SET_LOCALE
  type: SAM
- document:
    description: Verify that context-aware, preferably automated - or at worst, manual
      - output escaping protects against reflected, stored, and DOM based XSS. (C4)
    doctype: CRE
    id: 012-045-011
    name: CONTEXT_DEPENDENT_OUTPUT_ESCAPING
  type: SAM
- document:
    description: Verify that the application projects against JavaScript or JSON injection
      attacks, including for eval attacks, remote JavaScript includes, CSP bypasses,
      DOM XSS, and JavaScript expression evaluation. (C4)
    doctype: CRE
    id: 012-045-010
    name: VALIDATE_JS/JSON_INJECTION
  type: SAM
- document:
    description: 'Verify that all API responses contain Content-Disposition: attachment;
      filename="api.json" (or other appropriate filename for the content type).'
    doctype: CRE
    id: 004-015-038
    name: CONFIGURATION_SET_HEADERS_CONTENT_TYPE
  type: SAM
- document:
    description: Verify that a content security policy (CSPv2) is in place that helps
      mitigate impact for XSS attacks like HTML, DOM, JSON, and JavaScript injection
      vulnerabilities.
    doctype: CRE
    id: 004-015-038
    name: CONFIGURATION_SET_HEADERS_CSP
  type: SAM
- document:
    description: 'Verify that all responses contain X-Content-Type-Options: nosniff.'
    doctype: CRE
    id: 004-015-038
    name: CONFIGURATION_SET_HEADERS_NOSNIFF
  type: SAM
name: XSS
