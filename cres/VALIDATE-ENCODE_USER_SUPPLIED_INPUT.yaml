doctype: CRE
id: 791-406
links:
- document:
    description: Verify that serialization is not used when communicating with untrusted
      clients. If this is not possible, ensure that adequate integrity controls (and
      possibly encryption if sensitive data is sent) are enforced to prevent deserialization
      attacks including object injection.
    doctype: CRE
    id: 004-019-037
    name: VALIDATE_DESERIALIZATION_UNTRUSTED_INPUT
  type: SAM
- document:
    description: Verify that input validation is enforced on a trusted service layer.
      (C5)
    doctype: CRE
    id: 004-019-042
    name: VALIDATE_INPUT_TRUSTED_SERVICE_LAYER
  type: SAM
- document:
    description: Verify that the application has defenses against HTTP parameter pollution
      attacks, particularly if the application framework makes no distinction about
      the source of request parameters (GET, POST, cookies, headers, or environment
      variables).
    doctype: CRE
    id: 012-043
    name: VALIDATE_HTTP_PARAMETER_POLLUTION
  type: SAM
- document:
    description: Verify that frameworks protect against mass parameter assignment
      attacks, or that the application has countermeasures to protect against unsafe
      parameter assignment, such as marking fields private or similar. (C5)
    doctype: CRE
    id: 012-009
    name: VALIDATE_MASS_PARAMETER_ASSIGNMENT
  type: SAM
- document:
    description: Verify that all input (HTML form fields, REST requests, URL parameters,
      HTTP headers, cookies, batch files, RSS feeds, etc) is validated using positive
      validation (whitelisting). (C5)
    doctype: CRE
    id: 012-049-052
    name: POSITIVE_VALIDATION_FOR_USER_INPUT
  type: SAM
- document:
    description: Verify that structured data is strongly typed and validated against
      a defined schema including allowed characters, length and pattern (e.g. credit
      card numbers or telephone, or validating that two related fields are reasonable,
      such as checking that suburb and zip/postcode match). (C5)
    doctype: CRE
    id: 012-035
    name: VALIDATE_STRUCTURED_DATA_SCHEMA_STRONG_TYPING
  type: SAM
- document:
    description: Verify that URL redirects and forwards only allow whitelisted destinations,
      or show a warning when redirecting to potentially untrusted content.
    doctype: CRE
    id: 012-035
    name: VALIDATE_URL_REDIRECTS/FORWARDS_WHITELISTING
  type: SAM
- document:
    description: "Verify that output encoding is relevant for the interpreter and\
      \ context required. For example, use encoders specifically for HTML values,\
      \ HTML attributes, JavaScript, URL Parameters, HTTP headers, SMTP, and others\
      \ as the context requires, especially from untrusted inputs (e.g. names with\
      \ Unicode or apostrophes, such as \u306D\u3053 or O'Hara). (C4)"
    doctype: CRE
    id: 012-045-011
    name: CONTEXT_DEPENDENT_ENCODING
  type: SAM
- document:
    description: Verify that output encoding preserves the user's chosen character
      set and locale, such that any Unicode character point is valid and safely handled.
      (C4)
    doctype: CRE
    id: 012-045-010
    name: CONTEXT_DEPENDENT_ENCODING_CHARACTER_SET_LOCALE
  type: SAM
- document:
    description: Verify that context-aware, preferably automated - or at worst, manual
      - output escaping protects against reflected, stored, and DOM based XSS. (C4)
    doctype: CRE
    id: 012-045-011
    name: CONTEXT_DEPENDENT_OUTPUT_ESCAPING
  type: SAM
- document:
    description: Verify that data selection or database queries (e.g. SQL, HQL, ORM,
      NoSQL) use parameterized queries, ORMs, entity frameworks, or are otherwise
      protected from database injection attacks. (C3)
    doctype: CRE
    id: 012-045-011
    name: VALIDATE_PARAMETERIZATION_DATABASE_INJECTION
  type: SAM
- document:
    description: Verify that where parameterized or safer mechanisms are not present,
      context-specific output encoding is used to protect against injection attacks,
      such as the use of SQL escaping to protect against SQL injection. (C3, C4)
    doctype: CRE
    id: 012-045-010
    name: VALIDATE_CONTEXT_DEPENDENT_ENCODING_SQLI
  type: SAM
- document:
    description: Verify that the application projects against JavaScript or JSON injection
      attacks, including for eval attacks, remote JavaScript includes, CSP bypasses,
      DOM XSS, and JavaScript expression evaluation. (C4)
    doctype: CRE
    id: 012-045-010
    name: VALIDATE_JS/JSON_INJECTION
  type: SAM
- document:
    description: Verify that the application protects against LDAP Injection vulnerabilities,
      or that specific security controls to prevent LDAP Injection have been implemented.
      (C4)
    doctype: CRE
    id: 012-045-010
    name: VALIDATE_LDAP_INJECTION
  type: SAM
- document:
    description: Verify that the application protects against OS command injection
      and that operating system calls use parameterized OS queries or use contextual
      command line output encoding. (C4)
    doctype: CRE
    id: 012-045-010
    name: VALIDATE_OS_COMMAND_INJECTION
  type: SAM
- document:
    description: Verify that the application protects against Local File Inclusion
      (LFI) or Remote File Inclusion (RFI) attacks.
    doctype: CRE
    id: 012-045-010
    name: VALIDATE_LFI/RFI
  type: SAM
- document:
    description: Verify that the application protects against XPath injection or XML
      injection attacks. (C4)
    doctype: CRE
    id: 012-045-010
    name: VALIDATE_XPATH/XML_INJECTION
  type: SAM
- document:
    description: Verify that the application uses memory-safe string, safer memory
      copy and pointer arithmetic to detect or prevent stack, buffer, or heap overflows.
    doctype: CRE
    id: 012-028
    name: VALIDATE_MEMORY_SAFE_PROCESSING_OVERFLOWS
  type: SAM
- document:
    description: Verify that format strings do not take potentially hostile input,
      and are constant.
    doctype: CRE
    id: 012-035
    name: VALIDATE_FORMAT_STRINGS_CONSTANT
  type: SAM
- document:
    description: Verify that sign, range, and input validation techniques are used
      to prevent integer overflows.
    doctype: CRE
    id: 012-028
    name: VALIDATE_INTEGER_OVERFLOWS
  type: SAM
- document:
    description: Verify that serialized objects use integrity checks or are encrypted
      to prevent hostile object creation or data tampering. (C5)
    doctype: CRE
    id: 012-030-024
    name: VALIDATE_SERIALIZATION_INTEGRITY_CHECKS_ENCRYPTION
  type: SAM
- document:
    description: Verify that the application correctly restricts XML parsers to only
      use the most restrictive configuration possible and to ensure that unsafe features
      such as resolving external entities are disabled to prevent XXE.
    doctype: CRE
    id: 012-030-078
    name: VALIDATE_XML_PARSING_XXE
  type: SAM
- document:
    description: Verify that deserialization of untrusted data is avoided or is protected
      in both custom code and third-party libraries (such as JSON, XML and YAML parsers).
    doctype: CRE
    id: 012-030-024
    name: VALIDATE_DESERIALIZATION_UNTRUSTED_INPUT_THIRD_PARTY_DEPENDENCIES
  type: SAM
- document:
    description: Verify that when parsing JSON in browsers or JavaScript-based backends,
      JSON.parse is used to parse the JSON document. Do not use eval() to parse JSON.
    doctype: CRE
    id: 012-030-024
    name: VALIDATE_JSON_PARSING
  type: SAM
- document:
    description: Verify that the application appropriately encodes user-supplied data
      to prevent log injection. (C9)
    doctype: CRE
    id: 009-027
    name: LOG_PROTECTION_LOG_INJECTION_ENCODE_INPUT
  type: SAM
- document:
    description: Verify that all events are protected from injection when viewed in
      log viewing software. (C9)
    doctype: CRE
    id: 009-027
    name: LOG_PROTECTION_LOG_INJECTION
  type: SAM
- document:
    description: Verify that security logs are protected from unauthorized access
      and modification. (C9)
    doctype: CRE
    id: 009-027
    name: LOG_PROTECTION_AUTHORIZED_ACCESS
  type: SAM
- document:
    description: Verify that the application server only accepts the HTTP methods
      in use by the application or API, including pre-flight OPTIONS.
    doctype: CRE
    id: 004-015-039
    name: VALIDATE_HTTP_METHODS_WHITELIST
  type: SAM
name: VALIDATE/ENCODE_USER_SUPPLIED_INPUT
